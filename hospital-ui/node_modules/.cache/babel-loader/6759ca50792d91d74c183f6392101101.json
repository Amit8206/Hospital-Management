{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { authConstants } from \"./constants\";\nimport axios from '../helpers/axios'; //  User SignIn Action\n\nexport const login = user => {\n  _s();\n\n  // console.log(user);\n  // const ress = null\n  const [ress, setress] = useState(second);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/signin`, { ...user\n    });\n    setress(res);\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    }\n\n    if (res.status === 400 || res.status === 401 || res.status === 402) {\n      // console.log('400',res.data.error)\n      dispatch({\n        type: authConstants.LOGIN_FAILUR,\n        payload: {\n          error: res.data.error\n        }\n      });\n    } // else {\n    // if (res.status === 400) {\n    //     console.log('400',res.data.error)\n    //     dispatch({\n    //         type: authConstants.LOGIN_INVAILD_PASSWORD,\n    //         payload: {\n    //             error: res.data.error \n    //         }\n    //     });\n    // }\n    // if (res.status === 401) {\n    //     console.log({'401': res.data.error})\n    //     dispatch({\n    //         type: authConstants.LOGIN_NOT_VARIFIED,\n    //         payload: {\n    //             error: res.data.error \n    //         }\n    //     });\n    // }\n    // if (res.status === 402) {\n    //     console.log('402',res.data.error)\n    //     dispatch({\n    //         type: authConstants.LOGIN_NOT_EXIT,\n    //         payload: {\n    //             error: res.data.error \n    //         }\n    //     });\n    // } \n    // else {\n    //     dispatch({\n    //       type: authConstants.LOGIN_FAILUR,\n    //       payload: {\n    //           loading: false\n    //       }\n    //   });\n    // }\n    // }\n\n  };\n};\n\n_s(login, \"CHXccQKmHnKbZL8ur6AAN4rMNdY=\");\n\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            message: 'Invailed password..!!!'\n          } // payload: { message: 'Login Failed..!!!' }\n\n        });\n      }\n\n      if (res.status === 401) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            message: 'User Not Varified..!!!'\n          }\n        });\n      }\n    }\n  };\n};\nexport const faceBookLogging = data => {\n  console.log({\n    data\n  });\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/facebooklogin`, { ...data\n    }); // const res = await axios.post(`/facebooklogin`, {\n    //     ...data\n    // )};\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 401) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 402) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n    }\n  };\n};\nexport const googleLogin = data => {\n  // console.log({data});\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/googlelogin`, { ...data\n    }); // const res = await axios.post(`/facebooklogin`, {\n    //     ...data\n    // )};\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 401) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 402) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post(`/signout`);\n\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILUR,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["authConstants","axios","login","user","ress","setress","useState","second","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILUR","error","isUserLoggedIn","getItem","parse","message","faceBookLogging","console","log","googleLogin","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","LOGOUT_FAILUR"],"sources":["/home/amit1999/Node/Hospital-Management/hospital-ui/src/actions/authAction.js"],"sourcesContent":["import { authConstants } from \"./constants\"\nimport axios from '../helpers/axios'\n\n\n\n\n//  User SignIn Action\nexport const login = (user) => {\n\n    // console.log(user);\n    // const ress = null\n    const [ress, setress] = useState(second)\n\n    return async (dispatch) => {\n\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/signin`, {\n            ...user\n        });\n        setress(res);\n\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            });\n        } \n\n        if (res.status === 400 || res.status === 401 || res.status === 402) {\n            // console.log('400',res.data.error)\n            dispatch({\n                type: authConstants.LOGIN_FAILUR,\n                payload: {\n                    error: res.data.error \n                }\n            });\n        }\n\n        // else {\n            // if (res.status === 400) {\n            //     console.log('400',res.data.error)\n            //     dispatch({\n            //         type: authConstants.LOGIN_INVAILD_PASSWORD,\n            //         payload: {\n            //             error: res.data.error \n            //         }\n            //     });\n            // }\n            // if (res.status === 401) {\n            //     console.log({'401': res.data.error})\n            //     dispatch({\n            //         type: authConstants.LOGIN_NOT_VARIFIED,\n            //         payload: {\n            //             error: res.data.error \n            //         }\n            //     });\n            // }\n            // if (res.status === 402) {\n            //     console.log('402',res.data.error)\n            //     dispatch({\n            //         type: authConstants.LOGIN_NOT_EXIT,\n            //         payload: {\n            //             error: res.data.error \n            //         }\n            //     });\n            // } \n            // else {\n            //     dispatch({\n            //       type: authConstants.LOGIN_FAILUR,\n            //       payload: {\n            //           loading: false\n            //       }\n            //   });\n            // }\n        // }\n\n    }\n}\n\n\nexport const isUserLoggedIn = () => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            \n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            })\n        } \n        else {\n           if (res.status === 400){\n            dispatch({\n                type: authConstants.LOGIN_FAILUR,\n                payload: { message: 'Invailed password..!!!' }\n\n                // payload: { message: 'Login Failed..!!!' }\n            });\n           }\n            if(res.status === 401) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: { message: 'User Not Varified..!!!' }\n                });  \n            }        \n        }\n    }\n}\n\n\nexport const faceBookLogging = (data) => {\n\n    console.log({data});\n\n    return async (dispatch) => {\n\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/facebooklogin`, {\n            ...data\n        });\n        // const res = await axios.post(`/facebooklogin`, {\n        //     ...data\n        // )};\n\n\n\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            });\n        } else {\n            if (res.status === 400) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 401) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 402) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n        }\n\n    }\n}\n\n\n\n\nexport const googleLogin = (data) => {\n\n    // console.log({data});\n\n    return async (dispatch) => {\n\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/googlelogin`, {\n            ...data\n        });\n        // const res = await axios.post(`/facebooklogin`, {\n        //     ...data\n        // )};\n\n\n\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            });\n        } else {\n            if (res.status === 400) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 401) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 402) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n        }\n\n    }\n}\n\n\n\nexport const signout = () => {\n    return async dispatch => {\n\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\n        const res = await axios.post(`/signout`);\n\n        if (res.status === 200) {\n            localStorage.clear();\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\n        } else {\n            dispatch({\n                type: authConstants.LOGOUT_FAILUR,\n                payload: { error: res.data.error }\n\n            });\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}