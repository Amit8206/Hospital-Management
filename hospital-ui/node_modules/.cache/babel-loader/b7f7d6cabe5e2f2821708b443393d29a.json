{"ast":null,"code":"import { authConstants } from \"./constants\";\nimport axios from '../helpers/axios'; //  User SignIn Action\n\nexport const login = user => {\n  // console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/signin`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } // if (res.status === 401) {\n    //     // console.log('400',res.data.error)\n    //     dispatch({\n    //         type: authConstants.LOGIN_FAILUR,\n    //         payload: {\n    //             error: res.data.error \n    //         }\n    //     });\n    // }\n    // else {\n\n\n    if (res.status === 400) {\n      console.log('400', res.data.error);\n      dispatch({\n        type: authConstants.LOGIN_INVAILD_PASSWORD,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n\n    if (res.status === 401) {\n      console.log({\n        '401': res.data.error\n      });\n      dispatch({\n        type: authConstants.LOGIN_NOT_VARIFIED,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n\n    if (res.status === 402) {\n      console.log('402', res.data.error);\n      dispatch({\n        type: authConstants.LOGIN_NOT_EXIT,\n        payload: {\n          error: res.data.error\n        }\n      });\n    } // }\n\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILUR,\n        payload: {\n          loading: false\n        }\n      }); // dispatch({\n      //     type: authConstants.LOGIN_INVAILD_PASSWORD,\n      //     payload: { error: 'Invaild Password !!!' }\n      // });\n      // dispatch({\n      //     type: authConstants.LOGIN_NOT_VARIFIED,\n      //     payload: { error: 'User Not Verified !!!' }\n      // });\n      // dispatch({\n      //     type: authConstants.LOGIN_NOT_EXIT,\n      //     payload: { error: 'User Not Exit !!!' }\n      // });\n    }\n  };\n};\nexport const faceBookLogging = data => {\n  console.log({\n    data\n  });\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/facebooklogin`, { ...data\n    }); // const res = await axios.post(`/facebooklogin`, {\n    //     ...data\n    // )};\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 401) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 402) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n    }\n  };\n};\nexport const googleLogin = data => {\n  // console.log({data});\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/googlelogin`, { ...data\n    }); // const res = await axios.post(`/facebooklogin`, {\n    //     ...data\n    // )};\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 401) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n\n      if (res.status === 402) {\n        dispatch({\n          type: authConstants.LOGIN_FAILUR,\n          payload: {\n            error: {\n              message: res.data.message\n            }\n          }\n        });\n      }\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post(`/signout`);\n\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILUR,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["authConstants","axios","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","console","log","error","LOGIN_INVAILD_PASSWORD","LOGIN_NOT_VARIFIED","LOGIN_NOT_EXIT","isUserLoggedIn","getItem","parse","LOGIN_FAILUR","loading","faceBookLogging","message","googleLogin","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","LOGOUT_FAILUR"],"sources":["/home/amit1999/Node/Hospital-Management/hospital-ui/src/actions/authAction.js"],"sourcesContent":["import { authConstants } from \"./constants\"\nimport axios from '../helpers/axios'\n\n\n\n\n//  User SignIn Action\nexport const login = (user) => {\n\n    // console.log(user);\n\n    return async (dispatch) => {\n\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/signin`, {\n            ...user\n        });\n\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            });\n        } \n\n        // if (res.status === 401) {\n        //     // console.log('400',res.data.error)\n        //     dispatch({\n        //         type: authConstants.LOGIN_FAILUR,\n        //         payload: {\n        //             error: res.data.error \n        //         }\n        //     });\n        // }\n        // else {\n            if (res.status === 400) {\n                console.log('400',res.data.error)\n                dispatch({\n                    type: authConstants.LOGIN_INVAILD_PASSWORD,\n                    payload: {\n                        error: res.data.error \n                    }\n                });\n            }\n            if (res.status === 401) {\n                console.log({'401': res.data.error})\n                dispatch({\n                    type: authConstants.LOGIN_NOT_VARIFIED,\n                    payload: {\n                        error: res.data.error \n                    }\n                });\n            }\n            if (res.status === 402) {\n                console.log('402',res.data.error)\n                dispatch({\n                    type: authConstants.LOGIN_NOT_EXIT,\n                    payload: {\n                        error: res.data.error \n                    }\n                });\n            }\n        // }\n\n    }\n}\n\n\nexport const isUserLoggedIn = () => {\n    return async (dispatch) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            \n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            })\n        } \n        else {\n            dispatch({\n                type: authConstants.LOGIN_FAILUR,\n                payload: { loading: false }\n            });\n            // dispatch({\n            //     type: authConstants.LOGIN_INVAILD_PASSWORD,\n            //     payload: { error: 'Invaild Password !!!' }\n            // });\n            // dispatch({\n            //     type: authConstants.LOGIN_NOT_VARIFIED,\n            //     payload: { error: 'User Not Verified !!!' }\n            // });\n            // dispatch({\n            //     type: authConstants.LOGIN_NOT_EXIT,\n            //     payload: { error: 'User Not Exit !!!' }\n            // });\n        }\n    }\n}\n\n\nexport const faceBookLogging = (data) => {\n\n    console.log({data});\n\n    return async (dispatch) => {\n\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/facebooklogin`, {\n            ...data\n        });\n        // const res = await axios.post(`/facebooklogin`, {\n        //     ...data\n        // )};\n\n\n\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            });\n        } else {\n            if (res.status === 400) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 401) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 402) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n        }\n\n    }\n}\n\n\n\n\nexport const googleLogin = (data) => {\n\n    // console.log({data});\n\n    return async (dispatch) => {\n\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/googlelogin`, {\n            ...data\n        });\n        // const res = await axios.post(`/facebooklogin`, {\n        //     ...data\n        // )};\n\n\n\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token,\n                    user\n                }\n            });\n        } else {\n            if (res.status === 400) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 401) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n            if (res.status === 402) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILUR,\n                    payload: {\n                        error: { message: res.data.message }\n                    }\n                });\n            }\n        }\n\n    }\n}\n\n\n\nexport const signout = () => {\n    return async dispatch => {\n\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\n        const res = await axios.post(`/signout`);\n\n        if (res.status === 200) {\n            localStorage.clear();\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\n        } else {\n            dispatch({\n                type: authConstants.LOGOUT_FAILUR,\n                payload: { error: res.data.error }\n\n            });\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}