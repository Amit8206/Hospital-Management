{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { doctorConstants, medicineConstants, appointmentConstants, complainConstants, employeeConstants, leaveConstants, departmentConstants, patientConstants, userConstants } from \"./constants\";\nexport const getInitialData = () => {\n  return async dispatch => {\n    const res = await axios.post(`/initialdata`);\n\n    if (res.status === 200) {\n      payload: {\n        pendingAppointment;\n      }\n\n      const {\n        doctors,\n        medicines,\n        appointments,\n        complains,\n        employees,\n        departments,\n        leaves,\n        patients,\n        pendingLeaves,\n        pendingAppointments,\n        pendingUsers\n      } = res.data;\n      dispatch({\n        type: doctorConstants.GET_ALL_DOCTOR_SUCCESS,\n        payload: {\n          doctors\n        }\n      });\n      dispatch({\n        type: medicineConstants.GET_ALL_MEDICINE_SUCCESS,\n        payload: {\n          medicines\n        }\n      });\n      dispatch({\n        type: appointmentConstants.GET_ALL_APPOINTMENT_SUCCESS,\n        payload: {\n          appointments\n        }\n      });\n      dispatch({\n        type: complainConstants.GET_ALL_COMPLAIN_SUCCESS,\n        payload: {\n          complains\n        }\n      });\n      dispatch({\n        type: employeeConstants.GET_ALL_EMPLOYEE_SUCCESS,\n        payload: {\n          employees\n        }\n      });\n      dispatch({\n        type: patientConstants.GET_ALL_PATIENT_SUCCESS,\n        payload: {\n          patients\n        }\n      });\n      dispatch({\n        type: departmentConstants.GET_ALL_DEPARTMENT_SUCCESS,\n        payload: {\n          departments\n        }\n      });\n      dispatch({\n        type: leaveConstants.GET_ALL_LEAVE_SUCCESS,\n        payload: {\n          leaves\n        }\n      });\n      dispatch({\n        type: leaveConstants.GET_ALL_PENDING_LEAVE_SUCCESS,\n        payload: {\n          pendingLeaves\n        }\n      });\n      dispatch({\n        type: appointmentConstants.GET_ALL_PENDING_APPOINTMENT_SUCCESS,\n        payload: {\n          pendingAppointments\n        }\n      });\n      dispatch({\n        type: userConstants.USER_REGISTER_PENDING_SUCCESS,\n        payload: {\n          pendingUsers\n        }\n      });\n    }\n\n    console.log(res);\n  };\n};","map":{"version":3,"names":["axios","doctorConstants","medicineConstants","appointmentConstants","complainConstants","employeeConstants","leaveConstants","departmentConstants","patientConstants","userConstants","getInitialData","dispatch","res","post","status","payload","pendingAppointment","doctors","medicines","appointments","complains","employees","departments","leaves","patients","pendingLeaves","pendingAppointments","pendingUsers","data","type","GET_ALL_DOCTOR_SUCCESS","GET_ALL_MEDICINE_SUCCESS","GET_ALL_APPOINTMENT_SUCCESS","GET_ALL_COMPLAIN_SUCCESS","GET_ALL_EMPLOYEE_SUCCESS","GET_ALL_PATIENT_SUCCESS","GET_ALL_DEPARTMENT_SUCCESS","GET_ALL_LEAVE_SUCCESS","GET_ALL_PENDING_LEAVE_SUCCESS","GET_ALL_PENDING_APPOINTMENT_SUCCESS","USER_REGISTER_PENDING_SUCCESS","console","log"],"sources":["/home/amit1999/Node/Hospital-Management/hospital-ui/src/actions/initialDataAction.js"],"sourcesContent":["import axios from \"../helpers/axios\"\nimport { \n    doctorConstants,\n    medicineConstants,\n    appointmentConstants,\n    complainConstants,\n    employeeConstants,\n    leaveConstants,\n    departmentConstants,\n    patientConstants,\n    userConstants\n     } from \"./constants\";\n\n\nexport const getInitialData = () => {\n    return async (dispatch) => {\n        const res = await axios.post(`/initialdata`);\n        if(res.status === 200){\n                payload: { pendingAppointment }\n                const { doctors, medicines, appointments, complains, employees, departments, leaves, patients, pendingLeaves, pendingAppointments, pendingUsers } = res.data;\n            dispatch({\n                type: doctorConstants.GET_ALL_DOCTOR_SUCCESS,\n                payload: { doctors }\n            })\n            dispatch({\n                type: medicineConstants.GET_ALL_MEDICINE_SUCCESS,\n                payload: { medicines }\n            })\n            dispatch({\n                type: appointmentConstants.GET_ALL_APPOINTMENT_SUCCESS,\n                payload: { appointments }\n            })\n            dispatch({\n                type: complainConstants.GET_ALL_COMPLAIN_SUCCESS,\n                payload: { complains }\n            })\n            dispatch({\n                type: employeeConstants.GET_ALL_EMPLOYEE_SUCCESS,\n                payload: { employees }\n            })\n            dispatch({\n                type: patientConstants.GET_ALL_PATIENT_SUCCESS,\n                payload: { patients }\n            })\n            dispatch({\n                type: departmentConstants.GET_ALL_DEPARTMENT_SUCCESS,\n                payload: { departments }\n            })\n            dispatch({\n                type: leaveConstants.GET_ALL_LEAVE_SUCCESS,\n                payload: { leaves }\n            })\n            dispatch({\n                type: leaveConstants.GET_ALL_PENDING_LEAVE_SUCCESS,\n                payload: { pendingLeaves }\n            })\n            dispatch({\n                type: appointmentConstants.GET_ALL_PENDING_APPOINTMENT_SUCCESS,\n                payload: { pendingAppointments }\n            })\n            dispatch({\n                type: userConstants.USER_REGISTER_PENDING_SUCCESS,\n                payload: { pendingUsers }\n            })\n        }\n        console.log(res); \n    }   \n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SACIC,eADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,EAMIC,cANJ,EAOIC,mBAPJ,EAQIC,gBARJ,EASIC,aATJ,QAUY,aAVZ;AAaA,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChC,OAAO,MAAOC,QAAP,IAAoB;IACvB,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAY,cAAZ,CAAlB;;IACA,IAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;MACdC,OAAO,EAAE;QAAEC,kBAAkB;MAAE;;MAC/B,MAAM;QAAEC,OAAF;QAAWC,SAAX;QAAsBC,YAAtB;QAAoCC,SAApC;QAA+CC,SAA/C;QAA0DC,WAA1D;QAAuEC,MAAvE;QAA+EC,QAA/E;QAAyFC,aAAzF;QAAwGC,mBAAxG;QAA6HC;MAA7H,IAA8If,GAAG,CAACgB,IAAxJ;MACJjB,QAAQ,CAAC;QACLkB,IAAI,EAAE5B,eAAe,CAAC6B,sBADjB;QAELf,OAAO,EAAE;UAAEE;QAAF;MAFJ,CAAD,CAAR;MAIAN,QAAQ,CAAC;QACLkB,IAAI,EAAE3B,iBAAiB,CAAC6B,wBADnB;QAELhB,OAAO,EAAE;UAAEG;QAAF;MAFJ,CAAD,CAAR;MAIAP,QAAQ,CAAC;QACLkB,IAAI,EAAE1B,oBAAoB,CAAC6B,2BADtB;QAELjB,OAAO,EAAE;UAAEI;QAAF;MAFJ,CAAD,CAAR;MAIAR,QAAQ,CAAC;QACLkB,IAAI,EAAEzB,iBAAiB,CAAC6B,wBADnB;QAELlB,OAAO,EAAE;UAAEK;QAAF;MAFJ,CAAD,CAAR;MAIAT,QAAQ,CAAC;QACLkB,IAAI,EAAExB,iBAAiB,CAAC6B,wBADnB;QAELnB,OAAO,EAAE;UAAEM;QAAF;MAFJ,CAAD,CAAR;MAIAV,QAAQ,CAAC;QACLkB,IAAI,EAAErB,gBAAgB,CAAC2B,uBADlB;QAELpB,OAAO,EAAE;UAAES;QAAF;MAFJ,CAAD,CAAR;MAIAb,QAAQ,CAAC;QACLkB,IAAI,EAAEtB,mBAAmB,CAAC6B,0BADrB;QAELrB,OAAO,EAAE;UAAEO;QAAF;MAFJ,CAAD,CAAR;MAIAX,QAAQ,CAAC;QACLkB,IAAI,EAAEvB,cAAc,CAAC+B,qBADhB;QAELtB,OAAO,EAAE;UAAEQ;QAAF;MAFJ,CAAD,CAAR;MAIAZ,QAAQ,CAAC;QACLkB,IAAI,EAAEvB,cAAc,CAACgC,6BADhB;QAELvB,OAAO,EAAE;UAAEU;QAAF;MAFJ,CAAD,CAAR;MAIAd,QAAQ,CAAC;QACLkB,IAAI,EAAE1B,oBAAoB,CAACoC,mCADtB;QAELxB,OAAO,EAAE;UAAEW;QAAF;MAFJ,CAAD,CAAR;MAIAf,QAAQ,CAAC;QACLkB,IAAI,EAAEpB,aAAa,CAAC+B,6BADf;QAELzB,OAAO,EAAE;UAAEY;QAAF;MAFJ,CAAD,CAAR;IAIH;;IACDc,OAAO,CAACC,GAAR,CAAY9B,GAAZ;EACH,CAnDD;AAoDH,CArDM"},"metadata":{},"sourceType":"module"}