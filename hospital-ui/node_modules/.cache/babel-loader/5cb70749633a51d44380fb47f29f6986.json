{"ast":null,"code":"var _jsxFileName = \"/home/amit/Node/React And Node/Hospital Management/hospital-ui/src/Container/BarChart/Barchart.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst options = {\n  indexAxis: 'x',\n  elements: {\n    bar: {\n      borderWidth: 2\n    }\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'bottom'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Horizontal Bar Chart'\n    }\n  }\n};\n\nconst Barchart = () => {\n  _s();\n\n  const [data, setData] = useState({\n    labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    datasets: [{\n      label: 'Dataset 1',\n      data: [],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(25, 90, 13, 0.5)'\n    }, {\n      label: 'Dataset 2',\n      data: [],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = 'https://jsonplaceholder.typicode.com/comments';\n      const labelSet = [];\n      const dataSet1 = [];\n      const dataSet2 = [];\n      await fetch(url).then(data => {\n        //  console.log(\"Api data\", data)\n        const res = data.json();\n        return res;\n      }).then(res => {\n        console.log(\"ressss\", res);\n\n        for (const val of res) {\n          dataSet1.push(val.id);\n          dataSet2.push(val.postId); // labelSet.push(val.name)\n        }\n\n        setData({\n          labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n          datasets: [{\n            // label: 'Dataset ID',\n            label: \"Programming Languages\",\n            data: dataSet1,\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(99, 132, 0.5)'\n          }, {\n            label: 'Dataset ID2',\n            data: dataSet2,\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 235, 0.5)'\n          }]\n        });\n        console.log(\"arrData\", dataSet1, dataSet2);\n      }).catch(e => {\n        console.log(\"error\", e);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      height: '50%',\n      marginTop: '20%'\n    },\n    children: [console.log(\"dataaaaaaaa\", data), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Barchart, \"O4C6bH9QFYTcTJ5C9/cORg5yb+k=\");\n\n_c = Barchart;\nexport default Barchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","Pie","register","options","indexAxis","elements","bar","borderWidth","layout","padding","left","right","top","bottom","responsive","plugins","legend","position","title","display","text","Barchart","data","setData","labels","datasets","label","borderColor","backgroundColor","fetchData","url","labelSet","dataSet1","dataSet2","fetch","then","res","json","console","log","val","push","id","postId","catch","e","width","height","marginTop"],"sources":["/home/amit/Node/React And Node/Hospital Management/hospital-ui/src/Container/BarChart/Barchart.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from 'chart.js';\n\nimport { Bar, Pie } from 'react-chartjs-2';\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n  );\nconst options = {\n    indexAxis: 'x',\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      }\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Horizontal Bar Chart',\n      },\n    },\n  };\n\nconst Barchart =() => {\n    const [data, setData] = useState({\n        labels:['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        datasets: [\n          {\n            label: 'Dataset 1',\n            data:[],\n            borderColor: 'rgb(255, 99, 132)',\n            backgroundColor: 'rgba(25, 90, 13, 0.5)',\n          },\n          {\n            label: 'Dataset 2',\n            data:[],\n            borderColor: 'rgb(53, 162, 235)',\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          },\n        ],\n      });\n    useEffect(()=> {\n       const fetchData= async()=> {\n           const url = 'https://jsonplaceholder.typicode.com/comments'\n           const labelSet = [];\n           const dataSet1 = [];\n           const dataSet2 = [];\n         await fetch(url).then((data)=> {\n            //  console.log(\"Api data\", data)\n             const res = data.json();\n             return res\n         }).then((res) => {\n             console.log(\"ressss\", res)\n            for (const val of res) {\n                dataSet1.push(val.id);\n                dataSet2.push(val.postId)\n                // labelSet.push(val.name)\n            }\n            setData({\n                labels:['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n                datasets: [\n                  {\n                    // label: 'Dataset ID',\n                    label: \"Programming Languages\",\n                    data:dataSet1,\n                    borderColor: 'rgb(255, 99, 132)',\n                    backgroundColor: 'rgba(99, 132, 0.5)',\n                  },\n                  {\n                    label: 'Dataset ID2',\n                    data:dataSet2,\n                    borderColor: 'rgb(53, 162, 235)',\n                    backgroundColor: 'rgba(53, 235, 0.5)',\n                  },\n                ],\n              })\n            console.log(\"arrData\", dataSet1, dataSet2)\n         }).catch(e => {\n                console.log(\"error\", e)\n            })\n        }\n        \n        fetchData();\n    },[])\n   \n    return(\n        <div style={{width:'80%', height:'50%', marginTop: '20%'}}>\n            {\n                console.log(\"dataaaaaaaa\", data)\n            }\n            <Bar data={data} options={options}/>\n         </div>)\n}\nexport default Barchart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}