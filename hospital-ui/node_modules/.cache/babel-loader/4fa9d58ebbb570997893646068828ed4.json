{"ast":null,"code":"var _jsxFileName = \"/home/amit1999/Node Js/Hospital-Management/hospital-ui/src/Components/HOC/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = () => {\n  _s();\n\n  const token = window.localStorage.getItem('token');\n  const auth = useSelector(state => state.auth);\n  return token ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this);\n};\n\n_s(PrivateRoute, \"SvwR9yfdOSlAizXx+1ujAxpoAFQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","Outlet","useDispatch","useSelector","PrivateRoute","token","window","localStorage","getItem","auth","state"],"sources":["/home/amit1999/Node Js/Hospital-Management/hospital-ui/src/Components/HOC/PrivateRoute.js"],"sourcesContent":["import { Navigate, Outlet } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\nconst PrivateRoute = ( ) => {\n    const token = window.localStorage.getItem('token');\n    const auth = useSelector(state => state.auth);\n\n\n    \n   \nreturn  token ? (\n                <Outlet />\n    \n      )  :  (   <Navigate to='/home' />       )\n         \n}\n\n\nexport default PrivateRoute;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAIA,MAAMC,YAAY,GAAG,MAAO;EAAA;;EACxB,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;EACA,MAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;EAKJ,OAAQJ,KAAK,gBACG,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QADH,gBAGG,QAAC,QAAD;IAAU,EAAE,EAAC;EAAb;IAAA;IAAA;IAAA;EAAA,QAHhB;AAKC,CAZD;;GAAMD,Y;UAEWD,W;;;KAFXC,Y;AAeN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}