{"ast":null,"code":"import { doctorConstants } from \"../actions/constants\";\nconst initialState = {\n  doctors: [],\n  loading: false,\n  error: '',\n  message: ''\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case doctorConstants.GET_ALL_DOCTOR_SUCCESS:\n      state = { ...state,\n        doctors: action.payload.doctors\n      };\n      break;\n\n    case doctorConstants.ADD_NEW_DOCTOR_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case doctorConstants.ADD_NEW_DOCTOR_SUCCESS:\n      state = { ...state,\n        loading: false,\n        message: action.payload.message\n      };\n      break;\n\n    case doctorConstants.ADD_NEW_DOCTOR_FAILUR:\n      state = { ...state,\n        loading: false,\n        message: action.payload.error\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"names":["doctorConstants","initialState","doctors","loading","error","message","state","action","type","GET_ALL_DOCTOR_SUCCESS","payload","ADD_NEW_DOCTOR_REQUEST","ADD_NEW_DOCTOR_SUCCESS","ADD_NEW_DOCTOR_FAILUR"],"sources":["/home/amit1999/Node/Hospital-Management/hospital-ui/src/reducers/doctorReducer.js"],"sourcesContent":["import { doctorConstants } from \"../actions/constants\";\n\nconst initialState = {\n    doctors: [],\n    loading: false,\n    error: '',\n    message: ''\n}\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case doctorConstants.GET_ALL_DOCTOR_SUCCESS:\n            state = {\n                ...state,\n                doctors: action.payload.doctors\n            }\n            break;\n        \n        case doctorConstants.ADD_NEW_DOCTOR_REQUEST:\n            state = {\n                ...state,\n                loading: true\n           }\n            break;\n        case doctorConstants.ADD_NEW_DOCTOR_SUCCESS:\n            state = {\n                    ...state,\n                    loading: false,\n                    message: action.payload.message\n            }\n            break;\n        case doctorConstants.ADD_NEW_DOCTOR_FAILUR:\n            state = {\n                    ...state,\n                    loading: false,\n                    message: action.payload.error\n            }\n            break;\n    }           \n    return state;\n}"],"mappings":"AAAA,SAASA,eAAT,QAAgC,sBAAhC;AAEA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,EADQ;EAEjBC,OAAO,EAAE,KAFQ;EAGjBC,KAAK,EAAE,EAHU;EAIjBC,OAAO,EAAE;AAJQ,CAArB;AAOA,gBAAe,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBL,YAAyB;EAAA,IAAXM,MAAW;;EAC7C,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKR,eAAe,CAACS,sBAArB;MACIH,KAAK,GAAG,EACJ,GAAGA,KADC;QAEJJ,OAAO,EAAEK,MAAM,CAACG,OAAP,CAAeR;MAFpB,CAAR;MAIA;;IAEJ,KAAKF,eAAe,CAACW,sBAArB;MACIL,KAAK,GAAG,EACJ,GAAGA,KADC;QAEJH,OAAO,EAAE;MAFL,CAAR;MAIA;;IACJ,KAAKH,eAAe,CAACY,sBAArB;MACIN,KAAK,GAAG,EACA,GAAGA,KADH;QAEAH,OAAO,EAAE,KAFT;QAGAE,OAAO,EAAEE,MAAM,CAACG,OAAP,CAAeL;MAHxB,CAAR;MAKA;;IACJ,KAAKL,eAAe,CAACa,qBAArB;MACIP,KAAK,GAAG,EACA,GAAGA,KADH;QAEAH,OAAO,EAAE,KAFT;QAGAE,OAAO,EAAEE,MAAM,CAACG,OAAP,CAAeN;MAHxB,CAAR;MAKA;EA3BR;;EA6BA,OAAOE,KAAP;AACH,CA/BD"},"metadata":{},"sourceType":"module"}